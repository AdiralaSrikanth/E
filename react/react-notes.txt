De21

Why should I learn react?
Reasons:
1. React library itself -
can up and running with fundamentals of react in short time.
The Core idea is - Components. 
ex: login, application header. Multiple Components together end up a complete application 
Components based architecture forces you to break complex app into small peices 
which are easy to maintain, test & debug
React is fast. Renders and rerenders app very quickly. 
keep up to date with the latest changes in ur app data

Can build web and mobile apps

2. React Community
Active Community. You dont have to reinvent the wheel again. 
you will have react libraries like calendar picker, drag and drop
Great resources - tutorials etc.


NPM - node pkg manager
helps installing various dependencies like yarn, react etc
npm and yarn are similar

npm install -g yarn - we are installing yarn globally

Indecision app
Create a public folder - assets that we are going to serve up
1. create html file under public folder

install live-server
yarn global add liver-server {adding globally}

install react
***Load React library using CDN.
in the html file use script tag and in src = "load react library CDN"
you can find in unpkg {google}

1. react - CDN
react can be used in diff context - react-vr , react-native 
2. react-dom - react in browser //to use react in browser we use react-dom CDN
3. local js file

After writing react,react-dom in src attribute of script tag, start the server and check
react and react-dom in console

JSX - Javascript XML {Javascript syntax extension}, provided by react.
define template, can inject/insert data into those templates

scss,less - gives variable support and are lang extensions for css
similarly jsx is lang extension for react

D25
var template = <p>This is JSX from app.js</p> //this is JSX

to render above template, 
reactDOM.render() //render method in reactDOM is going to render our app.
render method takes two arguments
1. JSX, 
2. dom element - where you want to render 

var template = <p>This is JSX from app.js</p>
var appRoot = document.getElementById('app') //defined a div tag and assigned id as app in index.html

reactDOM.render(template, appRoot)

we will get the error as unexpected token <

chrome does not know what jsx is. jsx is not js, its a extension.
solution for above issue is take in JSX and convert it to Javascript
we use tool Babel to do this. (babel is a Javascript compiler.)

babel takes ES6 and Es7 code and compiles to ES5 code
Browsers like IE8 or 9 do not add latest features like arrow functions etc. 
using babel we can write arrow 
functions but at the end of the day it is es5 code in browser 

In babel,

var template = <p>This is JSX from app.js</p>

converts to old js functions which browser can understand.

var template = React.createElement(
    'p',
    null,
    'This is JSX from app.js'
)

'p' - element 
null - these are attributes here it is null. when you add id="app" it will show as {id:"app"} instead of null.
last one is of content.

Installing and setting up babel locally:

this will allow you to write jsx in ur editor and automatically compiles to react.createElement method call
and renders in browser/able to view output instantly.

Babel is a compiler. Its not gonna compile by its own. we have to add plugins and presets in order to convert jsx to react.createElement

preset - is a group of plugins

we need to include react-preset to convert jsx to react.createElement which browsers can understand

go to babel site > doc > plugins page.

1. click on react preset, it has plugins part of it. 
all these sub plugins are responsible for to convert jsx to react.createElement
2. preset -env which has es2015,16,17. now we can use latest js features.

D26

yarn global add babel-cli

Gives access to command line interface to use babel compiler. but it does not give latest js features.

Getting erros while installing babel. will check later.































































